CREATE TABLE aqi_forecast_data (
    id serial PRIMARY KEY,
    timestamp timestamp with time zone NOT NULL,
    forecast_aqi double precision NOT NULL
);

CREATE TEMP TABLE aqi_data_temp (
    id SERIAL PRIMARY KEY,
    longitude DOUBLE PRECISION NOT NULL,
    latitude DOUBLE PRECISION NOT NULL,
    aqi INTEGER NOT NULL,
    pm2_5 DOUBLE PRECISION,
    pm10 DOUBLE PRECISION,
    no2 DOUBLE PRECISION,
    o3 DOUBLE PRECISION,
    co DOUBLE PRECISION,
    so2 DOUBLE PRECISION,
    nh3 DOUBLE PRECISION,
    no DOUBLE PRECISION,
    timestamp TIMESTAMPTZ NOT NULL
);

DO $$ 
DECLARE 
    ts TIMESTAMPTZ := NOW() - INTERVAL '60 hours'; 
    end_ts TIMESTAMPTZ := NOW();
BEGIN 
    WHILE ts <= end_ts LOOP
        INSERT INTO aqi_data_temp (longitude, latitude, aqi, pm2_5, pm10, no2, o3, co, so2, nh3, no, timestamp) 
        VALUES (
            73.8567, 18.5204,
            80 + floor(random() * 81)::INT,    -- AQI between 80-160 (INTEGER)
            round((random() * 3)::NUMERIC, 2), -- PM2.5 between 0-3 (FLOAT, rounded)
            round((random() * 3)::NUMERIC, 2), -- PM10 between 0-3 (FLOAT, rounded)
            round((6 + random() * 19)::NUMERIC, 2),  -- NO2 between 6-25
            round((30 + random() * 90)::NUMERIC, 2), -- O3 between 30-120
            round((1000 + random() * 400)::NUMERIC, 2), -- CO between 1000-1400
            round((5 + random() * 20)::NUMERIC, 2),  -- SO2 between 5-25
            round((5 + random() * 20)::NUMERIC, 2),  -- NH3 between 5-25
            0, -- NO constant (INTEGER)
            ts
        );
        ts := ts + INTERVAL '1 hour';
    END LOOP;
END $$;

CREATE TABLE weather_data (
    id SERIAL PRIMARY KEY,  -- Auto-incrementing ID for each entry
    longitude DECIMAL(10, 4),  -- For storing the longitude
    latitude DECIMAL(10, 4),   -- For storing the latitude
    weather_main VARCHAR(50),  -- Main weather condition (e.g., Clear, Rain)
    weather_description VARCHAR(255),  -- Description of the weather (e.g., clear sky)
    temperature_kelvin DECIMAL(6, 2),  -- Temperature in Kelvin
    feels_like_kelvin DECIMAL(6, 2),  -- Feels-like temperature in Kelvin
    temp_min_kelvin DECIMAL(6, 2),  -- Minimum temperature in Kelvin
    temp_max_kelvin DECIMAL(6, 2),  -- Maximum temperature in Kelvin
    pressure INT,  -- Atmospheric pressure
    humidity INT,  -- Humidity percentage
    visibility INT,  -- Visibility in meters
    wind_speed DECIMAL(5, 2),  -- Wind speed in meters/second
    wind_deg INT,  -- Wind direction in degrees
    wind_gust DECIMAL(5, 2),  -- Wind gust speed in meters/second
    clouds INT,  -- Cloud coverage percentage
    timestamp BIGINT,  -- UNIX timestamp
    city VARCHAR(100),  -- City name
    country CHAR(2),  -- Country code
    sunrise BIGINT,  -- Sunrise time in UNIX timestamp
    sunset BIGINT,  -- Sunset time in UNIX timestamp
    temperature_celsius DECIMAL(5, 2),  -- Temperature in Celsius
    feels_like_celsius DECIMAL(5, 2),  -- Feels-like temperature in Celsius
    temp_min_celsius DECIMAL(5, 2),  -- Minimum temperature in Celsius
    temp_max_celsius DECIMAL(5, 2),  -- Maximum temperature in Celsius
    timestamp_ist TIMESTAMP  -- Timestamp in IST (Indian Standard Time)
);

CREATE TABLE IF NOT EXISTS aqi_data (
    id SERIAL PRIMARY KEY,
    longitude FLOAT NOT NULL,
    latitude FLOAT NOT NULL,
    aqi INTEGER NOT NULL,
    aqi_category VARCHAR(50),
    co FLOAT,
    no FLOAT,
    no2 FLOAT,
    o3 FLOAT,
    so2 FLOAT,
    pm2_5 FLOAT,
    pm10 FLOAT,
    nh3 FLOAT,
    timestamp BIGINT NOT NULL,
    timestamp_ist TIMESTAMP NOT NULL
);

ALTER TABLE weather_data
  ALTER COLUMN timestamp_ist TYPE TIMESTAMP WITH TIME ZONE USING timestamp_ist AT TIME ZONE 'Asia/Kolkata';
